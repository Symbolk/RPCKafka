/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CONSUMER_H_RPCGEN
#define _CONSUMER_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXTOPICNAMELEN 20
#define MAXKEYLEN 10

typedef char *topics;

struct partitionInfo {
	char *topic;
	int partitionId;
	int leaderBrokerId;
	struct partitionInfo *nextPartitionInfo;
};
typedef struct partitionInfo partitionInfo;

typedef partitionInfo *partitionInfoList;

struct consumerRecord {
	char *topic;
	int partitionId;
	quad_t offset;
	char *key;
	int value;
	struct consumerRecord *nextConsumerRecord;
};
typedef struct consumerRecord consumerRecord;

typedef consumerRecord *consumerRecordList;

struct position_1_argument {
	char *arg1;
	int arg2;
};
typedef struct position_1_argument position_1_argument;

struct seek_1_argument {
	char *arg1;
	int arg2;
	quad_t arg3;
};
typedef struct seek_1_argument seek_1_argument;

struct seektobeginning_1_argument {
	char *arg1;
	int arg2;
};
typedef struct seektobeginning_1_argument seektobeginning_1_argument;

struct seektoend_1_argument {
	char *arg1;
	int arg2;
};
typedef struct seektoend_1_argument seektoend_1_argument;

#define CONSUMER 0x20000002
#define CONSUMERVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define subscribe 1
extern  void * subscribe_1(topics , CLIENT *);
extern  void * subscribe_1_svc(topics , struct svc_req *);
#define unsubscribe 2
extern  void * unsubscribe_1(CLIENT *);
extern  void * unsubscribe_1_svc(struct svc_req *);
#define subscription 3
extern  topics * subscription_1(CLIENT *);
extern  topics * subscription_1_svc(struct svc_req *);
#define partitionsFor 4
extern  partitionInfoList * partitionsfor_1(char *, CLIENT *);
extern  partitionInfoList * partitionsfor_1_svc(char *, struct svc_req *);
#define poll 5
extern  consumerRecordList * poll_1(quad_t , CLIENT *);
extern  consumerRecordList * poll_1_svc(quad_t , struct svc_req *);
#define position 6
extern  quad_t * position_1(char *, int , CLIENT *);
extern  quad_t * position_1_svc(char *, int , struct svc_req *);
#define seek 7
extern  void * seek_1(char *, int , quad_t , CLIENT *);
extern  void * seek_1_svc(char *, int , quad_t , struct svc_req *);
#define seekToBeginning 8
extern  void * seektobeginning_1(char *, int , CLIENT *);
extern  void * seektobeginning_1_svc(char *, int , struct svc_req *);
#define seekToEnd 9
extern  void * seektoend_1(char *, int , CLIENT *);
extern  void * seektoend_1_svc(char *, int , struct svc_req *);
#define close 10
extern  void * close_1(CLIENT *);
extern  void * close_1_svc(struct svc_req *);
extern int consumer_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define subscribe 1
extern  void * subscribe_1();
extern  void * subscribe_1_svc();
#define unsubscribe 2
extern  void * unsubscribe_1();
extern  void * unsubscribe_1_svc();
#define subscription 3
extern  topics * subscription_1();
extern  topics * subscription_1_svc();
#define partitionsFor 4
extern  partitionInfoList * partitionsfor_1();
extern  partitionInfoList * partitionsfor_1_svc();
#define poll 5
extern  consumerRecordList * poll_1();
extern  consumerRecordList * poll_1_svc();
#define position 6
extern  quad_t * position_1();
extern  quad_t * position_1_svc();
#define seek 7
extern  void * seek_1();
extern  void * seek_1_svc();
#define seekToBeginning 8
extern  void * seektobeginning_1();
extern  void * seektobeginning_1_svc();
#define seekToEnd 9
extern  void * seektoend_1();
extern  void * seektoend_1_svc();
#define close 10
extern  void * close_1();
extern  void * close_1_svc();
extern int consumer_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_topics (XDR *, topics*);
extern  bool_t xdr_partitionInfo (XDR *, partitionInfo*);
extern  bool_t xdr_partitionInfoList (XDR *, partitionInfoList*);
extern  bool_t xdr_consumerRecord (XDR *, consumerRecord*);
extern  bool_t xdr_consumerRecordList (XDR *, consumerRecordList*);
extern  bool_t xdr_position_1_argument (XDR *, position_1_argument*);
extern  bool_t xdr_seek_1_argument (XDR *, seek_1_argument*);
extern  bool_t xdr_seektobeginning_1_argument (XDR *, seektobeginning_1_argument*);
extern  bool_t xdr_seektoend_1_argument (XDR *, seektoend_1_argument*);

#else /* K&R C */
extern bool_t xdr_topics ();
extern bool_t xdr_partitionInfo ();
extern bool_t xdr_partitionInfoList ();
extern bool_t xdr_consumerRecord ();
extern bool_t xdr_consumerRecordList ();
extern bool_t xdr_position_1_argument ();
extern bool_t xdr_seek_1_argument ();
extern bool_t xdr_seektobeginning_1_argument ();
extern bool_t xdr_seektoend_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CONSUMER_H_RPCGEN */
